services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        NGINX_USER: ${NGINX_USER}
        NGINX_GROUP: ${NGINX_GROUP}
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
      - php

  mysql:
    image: mariadb:10.5
    ports:
      - '${MYSQL_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./docker/mysql/data:/var/lib/mysql

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PHP_USER: ${PHP_USER}
        PHP_GROUP: ${PHP_GROUP}
    volumes:
      - ./src:/var/www/html

  composer:
    build:
      context: .
      dockerfile: docker/composer/Dockerfile
      args:
        COMPOSER_USER: ${COMPOSER_USER}
        COMPOSER_GROUP: ${COMPOSER_GROUP}
        COMPOSER_VERSION: ${COMPOSER_VERSION}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html

  npm:
    image: node:current-alpine
    volumes:
      - ./src:/var/www/html
    entrypoint: ['npm']
    working_dir: /var/www/html

  artisan:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PHP_USER: ${PHP_USER}
        PHP_GROUP: ${PHP_GROUP}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    depends_on:
      - mysql

  vite:
    image: node:current-alpine
    volumes:
      - ./src:/var/www/html
    entrypoint: ['npm', 'run', 'dev']
    working_dir: /var/www/html
    ports:
      - '5173:5173'
