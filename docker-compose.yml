services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      args:
        NGINX_USER: ${NGINX_USER}
        NGINX_GROUP: ${NGINX_GROUP}
    container_name: nginx
    ports:
      - '${NGINX_HTTP_PORT}:80'
      - '${NGINX_HTTPS_PORT}:443'
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
      - mysql
      - redis

  mysql:
    image: mariadb:10.5
    container_name: mysql
    ports:
      - '${MYSQL_PORT}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./docker/mysql/data:/var/lib/mysql

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PHP_USER: ${PHP_USER}
        PHP_GROUP: ${PHP_GROUP}
    container_name: php
    volumes:
      - ./src:/var/www/html

  composer:
    build:
      context: .
      dockerfile: docker/composer/Dockerfile
      args:
        COMPOSER_USER: ${COMPOSER_USER}
        COMPOSER_GROUP: ${COMPOSER_GROUP}
        COMPOSER_VERSION: ${COMPOSER_VERSION}
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html

  npm:
    image: node:current-alpine
    container_name: npm
    volumes:
      - ./src:/var/www/html
    entrypoint: ['npm']
    working_dir: /var/www/html

  artisan:
    container_name: artisan
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PHP_USER: ${PHP_USER}
        PHP_GROUP: ${PHP_GROUP}
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    depends_on:
      - mysql

  vite:
    image: node:current-alpine
    container_name: vite
    volumes:
      - ./src:/var/www/html
    entrypoint: ['npm', 'run', 'dev']
    working_dir: /var/www/html
    ports:
      - '5173:5173'

  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - '8081:80'
    depends_on:
      - mysql

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - '6379:6379'
    restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
    volumes:
      - ./docker/elasticsearch/data:/usr/share/elasticsearch/data
